# This is a template file for the OTel Collector configuration file. 
# This tempate file will be passed to gomplate to generate the final configuration file.

extensions:
  headers_setter:
    headers:
      - action: upsert
        key: x-oneuptime-token
        from_context: x-oneuptime-token

processors:

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        include_metadata: true
      http:
        endpoint: 0.0.0.0:4318
        include_metadata: true
        cors:
          allowed_origins: ["*"]
          allowed_headers: ["*"]



exporters:
  otlphttp:
    endpoint: "http://{{ .Env.SERVER_OPEN_TELEMETRY_INGEST_HOSTNAME }}:{{ .Env.OPEN_TELEMETRY_INGEST_PORT }}/otlp"
    headers: {"Content-Type": "application/json"}
    auth:
      authenticator: headers_setter
    {{ if eq .Env.OPENTELEMETRY_COLLECTOR_SENDING_QUEUE_ENABLED "true" }}
    sending_queue:
      enabled: true
      num_consumers: {{ .Env.OPENTELEMETRY_COLLECTOR_SENDING_QUEUE_NUM_CONSUMERS }}
      queue_size: {{ .Env.OPENTELEMETRY_COLLECTOR_SENDING_QUEUE_SIZE }}
    {{ end }}


{{ if not .Env.OPENTELEMETRY_EXPORTER_OTLP_ENDPOINT }}
service:
  telemetry:
    logs:
      level: "debug"
{{ end }}

{{ if not .Env.OPENTELEMETRY_EXPORTER_OTLP_ENDPOINT }}
service:
  telemetry:
    logs:
      level: "debug"
    metrics:
      readers:
        - periodic:
            exporter:
              otlp:
                protocol: http/protobuf
                endpoint: {{ .Env.OPENTELEMETRY_EXPORTER_OTLP_ENDPOINT }}
                {{ if .Env.OPENTELEMETRY_EXPORTER_OTLP_HEADERS }}
                headers: {{ .Env.OPENTELEMETRY_EXPORTER_OTLP_HEADERS }}
                {{ end }}
{{ end}}

  extensions: [ headers_setter ]
  pipelines:
    traces:
      receivers: [otlp]
      processors: []
      exporters: [otlphttp]
    metrics:
      receivers: [otlp]
      processors: []
      exporters: [otlphttp]
    logs:
      receivers: [otlp]
      processors: []
      exporters: [otlphttp]