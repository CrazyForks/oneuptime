name:  Docker Build

on:
  pull_request:
  push:
    branches-ignore:
      - 'hotfix-*'   
      - 'release'


jobs:

  docker-build-accounts:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Preinstall 
        run: npm run prerun
      
      # build image for accounts service
      - name: build docker image
        run: sudo docker build -f ./Accounts/Dockerfile .


  docker-build-otel-collector:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Preinstall 
        run: npm run prerun
      
      # build image for accounts service
      - name: build docker image
        run: sudo docker build -f ./OTelCollector/Dockerfile .

  docker-build-app:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Preinstall 
        run: npm run prerun

        
      # build image for accounts service
      - name: build docker image
        run: sudo docker build -f ./App/Dockerfile .

  docker-build-admin-dashboard:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Preinstall 
        run: npm run prerun

      # build image for home
      - name: build docker image
        run: sudo docker build -f ./AdminDashboard/Dockerfile .

  docker-build-dashboard:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Preinstall 
        run: npm run prerun

      # build image for home
      - name: build docker image
        run: sudo docker build -f ./Dashboard/Dockerfile .

  docker-build-haraka:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Preinstall 
        run: npm run prerun
        
      # build images
      - name: build docker image
        run: sudo docker build -f ./Haraka/Dockerfile .


  docker-build-probe:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      
      - name: Preinstall 
        run: npm run prerun
        
      # build image probe api
      - name: build docker image
        run: sudo docker build -f ./Probe/Dockerfile .

  docker-build-ingestor:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      
      - name: Preinstall 
        run: npm run prerun
        
      # build image probe api
      - name: build docker image
        run: sudo docker build -f ./Ingestor/Dockerfile .

  docker-build-status-page:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Preinstall 
        run: npm run prerun
        
      # build image for home
      - name: build docker image
        run: sudo docker build -f ./StatusPage/Dockerfile .

  docker-build-workflow:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Preinstall 
        run: npm run prerun

      # build image for mail service
      - name: build docker image
        run: sudo docker build -f ./Workflow/Dockerfile .


  docker-build-test-server:
    runs-on: ubuntu-latest
    env:
      CI_PIPELINE_ID: ${{github.run_number}}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Preinstall 
        run: npm run prerun

      # build image for mail service
      - name: build docker image
        run: sudo docker build -f ./TestServer/Dockerfile .